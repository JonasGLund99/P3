@inject NavigationManager NavManager

<header id="topnav-container">
    <div id="top-part">
        <div id="left-part">
            <button id="home-button">
                <i @onclick="NavigateToHomepage" class="fa-solid fa-house" style="color:#D9D9D9"></i>
            </button>
        </div>
            <h1 id="middle-part">
                <span class="ct-title">@ClinicalTestTitle</span> in @ExperimentNumber
            </h1>
        <div id="right-part">
        </div>
    </div>

    <div id="nav-button-container">    
        <button id="details" @onclick="() => SetActiveButton(0)" class="@((ActiveButton == 0 ? "active" : ""))">
            Details
        </button>
        <button id="overview" @onclick="() => SetActiveButton(1)" class="@((ActiveButton == 1 ? "active" : ""))">
            Overview
        </button>
        <button id="file-upload" @onclick="() => SetActiveButton(2)" class="@((ActiveButton == 2 ? "active" : ""))">
            File Upload
        </button>
        <button id="result-table" @onclick="() => SetActiveButton(3)" class="@((ActiveButton == 3 ? "active" : ""))">
            Result Table
        </button>
        <button id="heatmap" @onclick="() => SetActiveButton(4)" class="@((ActiveButton == 4 ? "active" : ""))">
            Heatmap
        </button>

    </div>
</header>

@code {
    [Parameter]
    public string ClinicalTestTitle { get; set; } = "";
    [Parameter]
    public string ExperimentNumber { get; set; } = "";

    [Parameter]
    public int ActiveButton { get; set; }

    [Parameter]
    public EventCallback<int> setActiveButtonCallback { get; set; }


    public void NavigateToHomepage() {
        NavManager.NavigateTo("/");
    }

    public async void SetActiveButton(int buttonID)
    {
        await setActiveButtonCallback.InvokeAsync(buttonID);
    }
}
