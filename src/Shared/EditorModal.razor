@using src.Data
@typeparam ModalType where ModalType : new() 

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <h4 class="modal-title">@ModalTitle</h4>
         </div>

         <form onsubmit="@(() => saveEdits())">
            <div class="modalContent">
               @if(ModalObject is Experiment)
               {
                  <p>Experiment Number</p>
                  <input type="text" required @bind="((Experiment)((object)ModalObject)).ExperimentNumber"/>
                  
                  <p>Title</p>
                  <input type="text" required @bind="((Experiment)((object)ModalObject)).Title" />
                  
                  <p>Author</p>
                  <input type="text" required @bind="((Experiment)((object)ModalObject)).Author"/>
                  
                  <p>Created At</p>
                  <input type="date" required @bind="((Experiment)((object)ModalObject)).CreatedAt" />
                  
                  <p>Description</p>
                  <textarea @bind="((Experiment)((object)ModalObject)).Description"/>
               } else
               {
                  <p>Title</p>
                  <input type="text" required @bind="((ClinicalTest)((object)ModalObject)).Title"/>
                  
                  <p>Created At</p>
                  <input type="date" required @bind="((ClinicalTest)((object)ModalObject)).CreatedAt"/>

                  <p>N-plicate size</p>
                  <input type="number" required min="1" @bind="((ClinicalTest)((object)ModalObject)).NplicateSize"/>

                  <p>Description</p>
                  <textarea @bind="((ClinicalTest)((object)ModalObject)).Description"/>
               }
            </div>
                  
            <div class="modal-footer">
               <button type="button" class="grey-button" @onclick="cancelEdits">Cancel</button>
               <button type="submit" class="green-button">Save</button>
            </div>

         </form>
      </div>
   </div>
</div>


@code {
   [Parameter, EditorRequired] 
   public string ModalTitle { get; set; } = "";
   [Parameter, EditorRequired] 
   public EventCallback<ModalType> CallbackClose {get; set;}
   [Parameter, EditorRequired] 
   public ModalType ModalObject { get; set; } = new();
   [Parameter, EditorRequired] 
   public EventCallback<ModalType> CallbackSave {get; set;}
   private async void saveEdits()
   {
       if (ModalObject is ClinicalTest)
       {
            ((ClinicalTest)(object)ModalObject).EditedAt = DateTime.Now;
       }
       await CallbackSave.InvokeAsync(ModalObject);
   }

   private async void cancelEdits()
   {
      await CallbackClose.InvokeAsync(ModalObject);
   }

}
