@using src.Data
@typeparam MenuCardType where MenuCardType : new()

<div class="card-content">
    @if (obj is Experiment)
    {
        Experiment experiment = (Experiment)(object)obj;
        <div class="card-textcontent-experiment active-experiment-@(((experiment.id) == ((Experiment)(object)selectedObj)?.id).ToString().ToLower())" @onclick="objectOnclick">
            <span>@(experiment.ExperimentNumber)</span>
            <span>@(experiment.Author)</span>
            <span>@(experiment.Title)</span>
            <span>@(experiment.CreatedAt?.ToShortDateString())</span>
            <span>@(experiment.EditedAt.ToString("dd/MM/yyyy HH:mm"))</span>
            <i title="Edit @(experiment.ExperimentNumber)" class="fa-solid fa-pencil" @onclick="editObject" @onclick:stopPropagation="true" @onclick:preventDefault="true"></i>
            <i title="Delete @(experiment.ExperimentNumber)" class="fa-solid fa-trash" @onclick="deleteObject" @onclick:stopPropagation="true" @onclick:preventDefault="true"></i>
        </div>

    } 
    else
    {
        ClinicalTest clinicalTest = (ClinicalTest)(object)obj;
        <div class="card-textcontent-clinicaltest" @onclick="objectOnclick">
            <span>@(clinicalTest.Title)</span>
            <span>@(clinicalTest.CreatedAt?.ToShortDateString())</span>
            <span>@(clinicalTest.EditedAt.ToString("dd/MM/yyyy HH:mm"))</span>
            <i title="Edit @(clinicalTest.Title)" class="fa-solid fa-pencil" @onclick="editObject" @onclick:stopPropagation="true" @onclick:preventDefault="true"></i>
            <i title="Delete @(clinicalTest.Title)" class="fa-solid fa-trash" @onclick="deleteObject" @onclick:stopPropagation="true" @onclick:preventDefault="true"></i>
        </div>
    }
</div>

@code {
    [Parameter] public MenuCardType obj { get; set; } = new();
    [Parameter] public EventCallback<MenuCardType> objectOnclickCallback { get; set; }
    [Parameter] public EventCallback<MenuCardType> objectEditCallback { get; set; }
    [Parameter] public EventCallback<MenuCardType> objectDeleteCallback { get; set; }
    [Parameter] public MenuCardType selectedObj { get; set; } = new();

    private async void deleteObject()
    {
        await objectDeleteCallback.InvokeAsync(obj);
    }

    private async void editObject()
    {
        await objectEditCallback.InvokeAsync(obj);
    }

    private async void objectOnclick()
    {
        await objectOnclickCallback.InvokeAsync(obj);
    }
}
