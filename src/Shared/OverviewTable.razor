@using src.Data

@inject IJSRuntime JS

<table id="overview-table">
    @*Title row*@
    <tr>
        <td class="line-number"></td>
        @for (int i = 0; i < numCols - 1; i++) 
        {
            @if (i < ClinicalTest.TableTitles.Count) 
            {
                <td contenteditable>@ClinicalTest.TableTitles[i]</td>
            }
            else 
            {
                <td contenteditable></td>
            }
        }
    </tr>

    @*Data rows*@
    @for (int i = 0; i < numRows; i++) 
    {
        int numSlides = ClinicalTest.Slides.Count;

        @if (numSlides != 0) {

            int slideIndex = (i / 3) % numSlides + i / (numSlides * 21) * 3;
            int blockIndex = (i % 3 + i / (numSlides * 3) * 3) % 21;
            <tr>
                <td class="line-number">@(i + 1)</td>
                @for (int j = 0; j < numCols - 1; j++) 
                {
                    @if (numSlides > 0) 
                    {
                        @if (slideIndex < numSlides && j < ClinicalTest.Slides[slideIndex].Blocks[blockIndex].PatientData.Count) 
                        {
                            <td contenteditable>@ClinicalTest.Slides[slideIndex].Blocks[blockIndex].PatientData[j]</td>
                        } 
                        else 
                        {
                            <td contenteditable></td>
                        }
                    } 
                    else 
                    {
                        <td contenteditable></td>
                    }   
                }
            </tr>
        }
        else 
        {
            <tr>
                <td class="line-number">@(i + 1)</td>
                @for (int j = 0; j < numCols - 1; j++) {
                    <td contenteditable></td>
                }
            </tr>
        }
    }
</table>

@code {
    private int numRows { get; set; } = 320;
    private int numCols { get; set; } = 40;

    [Parameter, EditorRequired]
    public ClinicalTest ClinicalTest { get; set; } = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("listenForPaste");
        }
    }
}
