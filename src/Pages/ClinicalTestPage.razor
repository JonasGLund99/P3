@page "/{ExperimentId}/{ClinicalTestId}"
@using src.Data
@using src.Shared
@using Microsoft.Azure.Cosmos

@if (experiment != null && clinicalTest != null) {
	<PageTitle>@clinicalTest.Title</PageTitle>

	<Navbar
		ClinicalTestTitle="@clinicalTest.Title" 
		ExperimentNumber="@experiment.ExperimentNumber" 
		setActiveButtonCallback="@SetActiveButton" 
		ActiveButton="@activeButton">
	</Navbar>

	<div class="component-container">
		@switch (activeButton)
		{
			case 0: <Details Experiment="@experiment" ClinicalTest="@clinicalTest"></Details> break;
			case 1: <Overview ClinicalTest="@clinicalTest"></Overview> break;
			case 2: <h1>File Upload</h1> break;
			case 3: <h1>Result Table</h1> break;
			case 4: <h1>Heatmap</h1> break;
		}
	</div>
} 
else 
{
	<Navbar ClinicalTestTitle="@placeholderCt.Title"
		ExperimentNumber="@placeholderExp.ExperimentNumber"
		setActiveButtonCallback="@SetActiveButton"
		ActiveButton="@activeButton">
	</Navbar>
	<div class="component-container">
		<Details Experiment="@placeholderExp" ClinicalTest="@placeholderCt"></Details>
	</div>
}

@code{
	[Parameter]
	public string ExperimentId { get; set; } = "";
	[Parameter]
	public string ClinicalTestId { get; set; } = "";

	private Experiment placeholderExp = new Experiment(
		id: "",
		experimentNumber: "EXP-##-######",
		title: "Title",
        author: "Author",
        description: "",
        createdAt: DateTime.Now
	);
	
	private ClinicalTest placeholderCt = new ClinicalTest(
		id: "",
		title: "Title",
		nplicateSize: 3,
        description: "",
        createdAt: DateTime.Now
	);

	private Experiment? experiment;
	private ClinicalTest? clinicalTest;

	// Get experiment and clincical test from database on the first render
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			experiment = await DatabaseService.Instance.GetItemById<Experiment>(ExperimentId);
			clinicalTest = await DatabaseService.Instance.GetItemById<ClinicalTest>(ClinicalTestId);
			StateHasChanged();
		}
	}

	private int activeButton { get; set; } = 0;

	private void SetActiveButton(int buttonId)
	{
		activeButton = buttonId;
	}
}